{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from \"../actions/types\";\nimport { setAlert } from \"./alert\"; //Register User\n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    ;\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/tdbla/OneDrive/Documents/Personal Projects/Brunch-HH/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","register","name","email","password","dispatch","config","headers","body","JSON","stringify","res","post","type","payload","data","err","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAAyCC,WAAzC,EAAqDC,UAArD,QAAuE,kBAAvE;AACA,SAASC,QAAT,QAAyB,SAAzB,C,CACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMC,QAAN,IAAkB;AACxE,QAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE;AACR,sBAAgB;AADR;AADK,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAER,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AACA,MAAI;AACH,UAAMO,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAD,IAAAA,QAAQ,CAAC;AACRQ,MAAAA,IAAI,EAAEjB,gBADE;AAERkB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFL,KAAD,CAAR;AAIA,GAPD,CAOE,OAAOC,GAAP,EAAY;AACb,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBE,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIf,QAAQ,CAACL,QAAQ,CAACoB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACA;;AAAA;AACDhB,IAAAA,QAAQ,CAAC;AACRQ,MAAAA,IAAI,EAAEhB;AADE,KAAD,CAAR;AAGA;AACD,CAzBM","sourcesContent":["import axios from \"axios\";\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL,USER_LOADED,AUTH_ERROR } from \"../actions/types\";\r\nimport { setAlert } from \"./alert\";\r\n//Register User\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\"\r\n\t\t}\r\n\t};\r\n\r\n\tconst body = JSON.stringify({ name, email, password });\r\n\ttry {\r\n\t\tconst res = await axios.post(\"/api/users\", body, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: REGISTER_SUCCESS,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tconst errors = err.response.data.errors;\r\n\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach(error => dispatch(setAlert(error.msg, \"danger\")));\r\n\t\t};\r\n\t\tdispatch({\r\n\t\t\ttype: REGISTER_FAIL\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}